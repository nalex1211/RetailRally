@using RetailRally.ViewModels
@model ChatVm
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Page</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        .max-w-half {
            max-width: 50%;
        }

    </style>
</head>
<body>
    <div style="width:70%;" class="mx-auto font-sans antialiased h-screen flex flex-col">
        <div class="bg-white shadow overflow-hidden sm:rounded-lg w-full m-auto flex flex-col justify-between" style="height:80%;">
            <div id="messageContainer" class="border-t border-gray-200 flex-grow overflow-auto">
                @foreach (var message in Model.Messages)
                {
                    var alignmentClass = message.SenderUsername == Model.CurrentUserName ? "justify-end" : "justify-start";
                    <div class="@alignmentClass bg-white px-4 py-5 flex">
                        <div class="max-w-half w-full rounded-lg shadow-md p-4">
                            <dt class="text-sm font-medium text-gray-500">
                                @message.SenderUsername
                            </dt>
                            <dd class="mt-1 text-sm text-gray-900">
                                @message.Text <br>
                                <div class="timestamp text-gray-500 text-xs">@message.Timestamp.ToString("g")</div>
                            </dd>
                        </div>
                    </div>
                }
            </div>

            <div class="border-t border-gray-200">
                <div class="flex items-center justify-between p-3 bg-gray-100">
                    <div class="flex-grow flex items-center bg-white rounded-full shadow-inner px-4">
                        <input id="messageInput" type="text" placeholder="Message @Model.OtherUsername" class="flex-grow px-4 py-2 text-sm focus:outline-none">
                        <button onclick="sendMessage()" class="text-gray-500 focus:outline-none">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.9/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

        connection.on("ReceiveMessage", function (user, message) {
            var currentUser = "@Model.CurrentUserName";
            var alignmentClass = user === currentUser ? "justify-end" : "justify-start";
            var msgDiv = document.createElement("div");
            msgDiv.classList.add(alignmentClass, "bg-white", "px-4", "py-5", "flex");
            msgDiv.innerHTML = `
                        <div class="max-w-half w-full rounded-lg shadow-md p-4">
                            <dt class="text-sm font-medium text-gray-500">${user}</dt>
                            <dd class="mt-1 text-sm text-gray-900">
                                ${message} <br>
                                <div class="timestamp text-gray-500 text-xs">${new Date().toLocaleString()}</div>
                            </dd>
                        </div>
                    `;
            document.getElementById("messageContainer").appendChild(msgDiv);
            scrollToBottom();
        });


        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        function sendMessage() {
            var messageInput = document.getElementById("messageInput");
            var message = messageInput.value;
            if (!message) return;

            connection.invoke("SendMessageToUser", "@Model.CurrentUserName", "@Model.OtherUserId", "@Model.OtherUsername", message)
                .then(function () {
                    messageInput.value = '';
                    scrollToBottom();
                })
                .catch(function (err) {
                    return console.error(err.toString());
                });
        }

        function scrollToBottom() {
            var messageContainer = document.getElementById("messageContainer");
            messageContainer.scrollTop = messageContainer.scrollHeight;
        }
    </script>
</body>
</html>
