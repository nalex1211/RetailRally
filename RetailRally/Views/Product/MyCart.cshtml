@model List<CartItem>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Кошик товарів</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        :root {
            --theme: light;
            --background-color-light: #efedea;
            --background-color-dark: #1f1f1f;
            --color-light: #000000;
            --color-dark: #e0e0e0;
            --container-bg-light: #ffffff;
            --container-bg-dark: #2a2a2a;
            --cart-header-footer-bg-light: #f0f0f0;
            --cart-header-footer-bg-dark: #2a2a2a;
            --cart-header-footer-color-light: #000000;
            --cart-header-footer-color-dark: #ffffff;
            --cart-item-bg-light: #f0f0f0;
            --cart-item-bg-dark: #2a2a2a;
            --cart-item-hover-bg-light: #e0e0e0;
            --cart-item-hover-bg-dark: #444;
            --cart-item-details-color-light: #000000;
            --cart-item-details-color-dark: #999999;
            --order-summary-bg-light: #f0f0f0;
            --order-summary-bg-dark: #2a2a2a;
            --order-summary-color-light: #000000;
            --order-summary-color-dark: #ffffff;
            --btn-blue-bg-light: #007bff;
            --btn-blue-bg-dark: #007bff;
            --btn-blue-hover-bg-light: #0056b3;
            --btn-blue-hover-bg-dark: #0056b3;
            --btn-red-bg-light: #dc3545;
            --btn-red-bg-dark: #dc3545;
            --btn-red-hover-bg-light: #c82333;
            --btn-red-hover-bg-dark: #c82333;
            --custom-checkbox-bg-light: #ccc;
            --custom-checkbox-bg-dark: #007bff;
            --quantity-input-bg-light: #ffffff;
            --quantity-input-bg-dark: #1f1f1f;
            --quantity-input-border-light: #ccc;
            --quantity-input-border-dark: #555;
            --error-message-color-light: #ff0000;
            --error-message-color-dark: #ff0000;
        }

        body {
            background-color: var(--background-color-dark);
            color: var(--color-dark);
        }

            body[data-theme='light'] {
                background-color: var(--background-color-light);
                color: var(--color-light);
            }

        .container {
            max-width: 1400px;
            margin: auto;
            padding: 20px;
        }

        .cart-header, .cart-footer {
            background-color: var(--cart-header-footer-bg-dark);
            padding: 10px 20px;
            border-radius: 8px;
        }

            .cart-header p, .cart-footer a {
                color: var(--cart-header-footer-color-dark);
            }

        body[data-theme='light'] .cart-header, body[data-theme='light'] .cart-footer {
            background-color: var(--cart-header-footer-bg-light);
        }

            body[data-theme='light'] .cart-header p, body[data-theme='light'] .cart-footer a {
                color: var(--cart-header-footer-color-light);
            }

        .cart-item {
            background-color: var(--cart-item-bg-dark);
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            transition: background-color 0.3s ease;
        }

            .cart-item:hover {
                background-color: var(--cart-item-hover-bg-dark);
            }

        body[data-theme='light'] .cart-item {
            background-color: var(--cart-item-bg-light);
        }

            body[data-theme='light'] .cart-item:hover {
                background-color: var(--cart-item-hover-bg-light);
            }

        .cart-item img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 8px;
        }

        .cart-item-details {
            flex-grow: 1;
            margin-left: 20px;
        }

            .cart-item-details span {
                display: block;
            }

            .cart-item-details .text-sm {
                color: var(--cart-item-details-color-dark);
            }

        body[data-theme='light'] .cart-item-details .text-sm {
            color: var(--cart-item-details-color-light);
        }

        .order-summary {
            background-color: var(--order-summary-bg-dark);
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            width: 100%;
            max-width: 400px;
        }

        body[data-theme='light'] .order-summary {
            background-color: var(--order-summary-bg-light);
        }

        .order-summary h2, .order-summary span {
            color: var(--order-summary-color-dark);
        }

        body[data-theme='light'] .order-summary h2, body[data-theme='light'] .order-summary span {
            color: var(--order-summary-color-light);
        }

        .order-summary .order-summary-items img {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 8px;
        }

        .order-summary-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .btn {
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
        }

        .btn-blue {
            background-color: var(--btn-blue-bg-dark);
            color: #ffffff;
        }

            .btn-blue:hover {
                background-color: var(--btn-blue-hover-bg-dark);
            }

        body[data-theme='light'] .btn-blue {
            background-color: var(--btn-blue-bg-light);
        }

            body[data-theme='light'] .btn-blue:hover {
                background-color: var(--btn-blue-hover-bg-light);
            }

        .btn-red {
            background-color: var(--btn-red-bg-dark);
            color: #ffffff;
        }

            .btn-red:hover {
                background-color: var(--btn-red-hover-bg-dark);
            }

        body[data-theme='light'] .btn-red {
            background-color: var(--btn-red-bg-light);
        }

            body[data-theme='light'] .btn-red:hover {
                background-color: var(--btn-red-hover-bg-light);
            }

        .disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .custom-checkbox {
            position: relative;
            display: inline-block;
            width: 20px;
            height: 20px;
        }

            .custom-checkbox input {
                opacity: 0;
                width: 0;
                height: 0;
            }

        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 20px;
            width: 20px;
            background-color: var(--custom-checkbox-bg-light);
            border-radius: 4px;
        }

        body[data-theme='light'] .checkmark {
            background-color: var(--custom-checkbox-bg-light);
        }

        .custom-checkbox input:checked ~ .checkmark {
            background-color: var(--custom-checkbox-bg-dark);
        }

        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        .custom-checkbox input:checked ~ .checkmark:after {
            display: block;
        }

        .custom-checkbox .checkmark:after {
            left: 7px;
            top: 3px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            transform: rotate(45deg);
        }

        .quantity-input {
            background-color: var(--quantity-input-bg-dark);
            border: 1px solid var(--quantity-input-border-dark);
            color: var(--color-dark);
            border-radius: 4px;
            text-align: center;
            width: 60px;
        }

        body[data-theme='light'] .quantity-input {
            background-color: var(--quantity-input-bg-light);
            border: 1px solid var(--quantity-input-border-light);
            color: var(--color-light);
        }

        .quantity-input:focus {
            border-color: #007bff;
            outline: none;
        }

        .error-message {
            color: var(--error-message-color-dark);
            font-size: 0.8em;
            display: none;
        }

        body[data-theme='light'] .error-message {
            color: var(--error-message-color-light);
        }

    </style>
</head>
<body>
    <form asp-action="RemoveSelectedFromCart" method="post">
        <div class="container mx-auto mt-10">
            <div class="flex flex-col md:flex-row md:items-start shadow-md my-10">
                <div class="w-full md:w-3/4 md:mr-2">
                    <div class="cart-header flex justify-between items-center border-b border-gray-600 p-4">
                        <p class="text-xl font-semibold">Кошик товарів</p>
                        <div class="flex items-center">
                            <button type="button" id="selectAllButton" class="text-blue-500 text-sm mr-4">Select All</button>
                            <button type="button" id="deselectAllButton" class="text-blue-500 text-sm mr-4">Deselect All</button>
                            <p class="text-xl">@Model.Count Items</p>
                        </div>
                    </div>

                    <div class="cart-header flex mt-6 pb-5 border-b border-gray-600">
                        <p class="text-xs font-semibold uppercase w-2/5 pl-4">Деталі продукту</p>
                        <p class="text-xs font-semibold uppercase w-1/5 text-center">Ціна</p>
                        <p class="text-xs font-semibold uppercase w-1/5 text-center">Доступна кількість</p>
                        <p class="text-xs font-semibold uppercase w-1/5 text-center">Кількість</p>
                        <p class="text-xs font-semibold uppercase w-1/5 text-center">Вибрані товари</p>
                    </div>
                    @foreach (var product in Model)
                    {
                        <div class="cart-item flex items-center hover:bg-gray-700 px-4 py-4">
                            <div class="w-2/5 flex items-center">
                                <img class="h-24" src="@product.Product.PictureUrl" alt="@product.Product.Name">
                                <div class="cart-item-details flex flex-col ml-4">
                                    <span class="text-sm font-bold">@product.Product.Name</span>
                                    <span class="text-xs text-gray-400">@product.Product.User.UserName</span>
                                    <button asp-route-productId="@product.Product.Id" asp-action="RemoveProductFromCart" class="text-xs text-blue-500 mt-2 link">Вилучити</button>
                                </div>
                            </div>
                            <div class="w-1/5 text-center">
                                @if (product.Product.Discount.HasValue && product.Product.Discount.Value > 0)
                                {
                                    <span class="line-through">₴@String.Format("{0:F2}", product.Product.Price)</span>

                                    <br />
                                    <span>₴@String.Format("{0:F2}", product.Product.DiscountedPrice)</span>
                                }
                                else
                                {
                                    <span>₴@String.Format("{0:F2}", product.Product.Price)</span>
                                }
                            </div>
                            <div class="w-1/5 text-center">
                                <span>@product.Product.Quantity</span>
                            </div>
                            <div class="w-1/5 text-center">
                                <input type="number" name="quantities" value="1" min="1" max="@product.Product.Quantity" class="quantity-input no-spin-buttons">
                                <span class="error-message"></span>
                            </div>
                            <div class="w-1/5 text-center">
                                <label class="custom-checkbox">
                                    <input type="checkbox" name="selectedItems" value="@product.ProductId" class="product-checkbox"
                                           data-product-name="@product.Product.Name"
                                           data-product-price="@product.Product.DiscountedPrice"
                                           data-product-image="@product.Product.PictureUrl"
                                           data-product-quantity="@product.Product.Quantity">
                                    <span class="checkmark"></span>
                                </label>
                            </div>
                        </div>
                    }

                    <div class="cart-footer flex justify-between items-center border-t border-gray-600 p-4">
                        <a asp-action="AllProducts" class="text-blue-500 text-sm link">Продовжити покупки</a>
                    </div>
                </div>
                <div class="order-summary w-full md:w-1/3 mt-6 md:mt-0 p-4">
                    <h2 class="text-xl font-semibold mb-2">Підсумок замовлення</h2>
                    <div id="orderSummaryItems" class="order-summary-items">
                    </div>
                    <div class="flex justify-between mb-4">
                        <span class="text-sm font-semibold uppercase">Всього</span>
                        <span class="text-sm font-semibold" id="orderSummaryTotal">₴0</span>
                    </div>
                    <button asp-action="GoToBuyPage" id="buySelectedButton" class="btn btn-blue disabled" disabled>Каса</button>
                    <button id="removeSelectedButton" class="btn btn-red disabled" disabled>Вилучити обране</button>
                </div>
            </div>
        </div>
    </form>
</body>
</html>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var buyButton = document.getElementById('buySelectedButton');
        var removeButton = document.getElementById('removeSelectedButton');
        var checkboxes = document.querySelectorAll('.product-checkbox');
        var orderSummaryItems = document.getElementById('orderSummaryItems');
        var orderSummaryTotal = document.getElementById('orderSummaryTotal');
        var selectAllButton = document.getElementById('selectAllButton');
        var deselectAllButton = document.getElementById('deselectAllButton');

        function updateOrderSummary() {
            orderSummaryItems.innerHTML = '';
            var totalCost = 0;

            checkboxes.forEach(function (checkbox) {
                if (checkbox.checked) {
                    var productName = checkbox.dataset.productName;
                    var s = checkbox.dataset.productPrice;
                    var correctedString = s.replace(',', '.');
                    var productPrice = parseFloat(correctedString);
                    var productQuantity = parseInt(checkbox.closest('.cart-item').querySelector('.quantity-input').value);
                    var productImage = checkbox.dataset.productImage;
                    var errorMessage = checkbox.closest('.cart-item').querySelector('.error-message');

                    if (errorMessage.style.display === 'none' && productQuantity > 0) {
                        totalCost += productPrice * productQuantity;

                        var itemElement = document.createElement('div');
                        itemElement.className = 'order-summary-item flex items-center mb-2';

                        var imageElement = document.createElement('img');
                        imageElement.src = productImage;
                        imageElement.alt = productName;
                        imageElement.className = 'h-8 w-8 mr-2';

                        var nameElement = document.createElement('span');
                        nameElement.textContent = productName + " x " + productQuantity;
                        nameElement.className = 'text-sm font-bold';

                        var priceElement = document.createElement('span');
                        priceElement.textContent = '₴' + (productPrice * productQuantity).toFixed(2);
                        priceElement.className = 'text-sm ml-2';

                        itemElement.appendChild(imageElement);
                        itemElement.appendChild(nameElement);
                        itemElement.appendChild(priceElement);

                        orderSummaryItems.appendChild(itemElement);
                    }
                }
            });

            orderSummaryTotal.textContent = '₴' + totalCost.toFixed(2);
        }

        function updateButtonStates() {
            var isAnyCheckboxChecked = Array.from(checkboxes).some(checkbox => checkbox.checked);
            var hasErrors = Array.from(document.querySelectorAll('.error-message')).some(error => error.style.display === 'block');

            buyButton.disabled = !isAnyCheckboxChecked || hasErrors;
            removeButton.disabled = !isAnyCheckboxChecked || hasErrors;

            if (isAnyCheckboxChecked && !hasErrors) {
                buyButton.classList.remove('disabled');
                removeButton.classList.remove('disabled');
            } else {
                buyButton.classList.add('disabled');
                removeButton.classList.add('disabled');
            }
        }

        function validateQuantity(quantityInput, errorMessage, availableQuantity) {
            var enteredQuantity = quantityInput.value.trim();

            if (enteredQuantity === '') {
                errorMessage.textContent = 'Кількість не може бути порожньою!';
                errorMessage.style.display = 'block';
            } else if (parseInt(enteredQuantity) > availableQuantity) {
                errorMessage.textContent = 'Кількість перевищує наявний складський запас!';
                errorMessage.style.display = 'block';
            } else if (parseInt(enteredQuantity) <= 0) {
                errorMessage.textContent = 'Кількість повинна бути більшою за нуль!';
                errorMessage.style.display = 'block';
            } else {
                errorMessage.style.display = 'none';
            }
        }

        selectAllButton.addEventListener('click', function () {
            checkboxes.forEach(function (checkbox) {
                var quantityInput = checkbox.closest('.cart-item').querySelector('.quantity-input');
                var errorMessage = checkbox.closest('.cart-item').querySelector('.error-message');
                var availableQuantity = parseInt(checkbox.dataset.productQuantity);

                validateQuantity(quantityInput, errorMessage, availableQuantity);

                if (errorMessage.style.display === 'none' && quantityInput.value > 0) {
                    checkbox.checked = true;
                }
            });

            updateButtonStates();
            updateOrderSummary();
        });

        deselectAllButton.addEventListener('click', function () {
            checkboxes.forEach(function (checkbox) {
                checkbox.checked = false;
            });

            updateButtonStates();
            updateOrderSummary();
        });

        checkboxes.forEach(function (checkbox) {
            var quantityInput = checkbox.closest('.cart-item').querySelector('.quantity-input');
            var errorMessage = checkbox.closest('.cart-item').querySelector('.error-message');
            var availableQuantity = parseInt(checkbox.dataset.productQuantity);

            validateQuantity(quantityInput, errorMessage, availableQuantity);

            checkbox.addEventListener('change', function () {
                updateButtonStates();
                updateOrderSummary();
            });

            checkbox.addEventListener('click', function (e) {
                e.stopPropagation();
            });

            quantityInput.addEventListener('input', function () {
                validateQuantity(quantityInput, errorMessage, availableQuantity);
                updateButtonStates();
                updateOrderSummary();
            });
        });

        updateButtonStates();
        updateOrderSummary();
    });
</script>
