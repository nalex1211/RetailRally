@using RetailRally.Helpers
@using RetailRally.ViewModels
@model MainPageVm

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

@{
    var cartItems = ViewBag.CartItems as List<CartItem>;
    var categoryId = ViewBag.CategoryId as int?;
}

<style>
    :root {
        --theme: light;
        --background-color-light: #f5f7fa;
        --background-color-dark: #1f1f1f;
        --color-light: #1a1a1a;
        --color-dark: #e0e0e0;
        --link-color-light: #ff7f50;
        --link-color-dark: lawngreen;
        --link-hover-color-light: #e75432;
        --link-hover-color-dark: green;
        --categories-background-light: #e1f5fe;
        --categories-background-dark: #2E2E2E;
        --card-background-light: #ffffff;
        --card-background-dark: #333;
        --card-description-color-light: #333;
        --card-description-color-dark: #a0a0a0;
        --price-color-light: #ff4500;
        --price-color-dark: #21B10D;
        --old-price-color-light: #d32f2f;
        --old-price-color-dark: #ff0000;
        --quantity-color-light: #555555;
        --quantity-color-dark: #a0a0a0;
        --comment-count-color-light: #ff6347;
        --comment-count-color-dark: #8E8B8B;
        --footer-color-light: #333;
        --footer-color-dark: #a0a0a0;
        --btn-primary-light: #ff7f50;
        --btn-primary-dark: #4682b4;
        --btn-success-light: #3cb371;
        --btn-success-dark: #32cd32;
    }

    body {
        font-family: 'Arial', sans-serif;
        background-color: var(--background-color-dark);
        color: var(--color-dark);
    }

        body[data-theme='light'] {
            background-color: var(--background-color-light);
            color: var(--color-light);
        }

    .link-style {
        color: var(--link-color-dark);
        text-decoration: none;
        border-bottom: 1px solid var(--link-color-dark);
    }

        .link-style:hover {
            color: var(--link-hover-color-dark);
            border-color: var(--link-hover-color-dark);
        }

    body[data-theme='light'] .link-style {
        color: var(--link-color-light);
        border-bottom: 1px solid var(--link-color-light);
    }

        body[data-theme='light'] .link-style:hover {
            color: var(--link-hover-color-light);
            border-color: var(--link-hover-color-light);
        }

    .new-link-style:hover {
        color: gray;
    }

    .my-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }

    .clickable-card {
        cursor: pointer;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: none;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

        .clickable-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        }

    .no-outline:hover {
        transform: none;
        box-shadow: none;
    }

    .btn-add-to-cart {
        margin-right: 10px;
    }

    .card-img-container {
        width: 100%;
        height: 250px;
        overflow: hidden;
        position: relative;
    }

    .d-flex {
        display: flex;
    }

    .flex-column {
        flex-direction: column;
    }

    .flex-md-row {
        flex-direction: row;
    }

    .categories {
        background-color: var(--categories-background-dark);
        padding: 20px;
        margin-right: 20px;
        box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.5);
        border-radius: 8px;
        width: 300px;
    }

        .categories ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .categories .list-group-item {
            background: transparent;
            border: none;
            padding: 5px 0;
            color: var(--color-dark);
        }

    body[data-theme='light'] .categories .list-group-item {
        color: var(--color-light);
    }

    .categories .form-select {
        margin-bottom: 10px;
    }

    .filter-container h2 {
        font-size: 1.25em;
        margin-bottom: 10px;
    }

    .filter-container .input-group {
        display: flex;
        align-items: center;
    }

    .filter-container .input-group-text {
        background-color: var(--btn-primary-dark);
        color: white;
        border: none;
    }

    .filter-container .form-control {
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .filter-container .btn {
        width: 35%;
    }

    body[data-theme='light'] .categories {
        background-color: var(--categories-background-light);
    }

    .card {
        background-color: var(--card-background-dark);
        border: none;
        color: var(--color-dark);
        border-radius: 8px;
        overflow: hidden;
        position: relative;
        padding-bottom: 20px;
    }

    body[data-theme='light'] .card {
        background-color: var(--card-background-light);
        color: var(--color-light);
    }

    .card-title {
        font-size: 1.2em;
        margin-bottom: 0.5em;
    }

    .card-text {
        margin-bottom: 1em;
    }

    .card-description {
        font-size: 0.9em;
        color: var(--card-description-color-dark);
        height: 40px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    body[data-theme='light'] .card-description {
        color: var(--card-description-color-light);
    }

    .price {
        font-size: 1.5em;
        font-weight: bold;
        color: var(--price-color-dark);
    }

    body[data-theme='light'] .price {
        color: var(--price-color-light);
    }

    .old-price {
        font-size: 1.2em;
        color: var(--old-price-color-dark);
        text-decoration: line-through;
        margin-right: 10px;
    }

    body[data-theme='light'] .old-price {
        color: var(--old-price-color-light);
    }

    .quantity {
        font-size: 1em;
        color: var(--quantity-color-dark);
    }

    body[data-theme='light'] .quantity {
        color: var(--quantity-color-light);
    }

    .comment-count {
        font-size: 0.9em;
        color: var(--comment-count-color-dark);
    }

    body[data-theme='light'] .comment-count {
        color: var(--comment-count-color-light);
    }

    .card-body {
        padding: 10px;
    }

    .btn-primary {
        background-color: var(--btn-primary-dark);
        border-color: var(--btn-primary-dark);
        color: white;
    }

        .btn-primary:hover {
            background-color: var(--btn-primary-light);
            border-color: var(--btn-primary-light);
        }

    body[data-theme='light'] .btn-primary {
        background-color: var(--btn-primary-light);
        border-color: var(--btn-primary-light);
    }

        body[data-theme='light'] .btn-primary:hover {
            background-color: var(--btn-primary-light);
            border-color: var(--btn-primary-light);
        }

    .btn-success {
        background-color: var(--btn-success-dark);
        border-color: var(--btn-success-dark);
        color: white;
    }

        .btn-success:hover {
            background-color: var(--btn-success-light);
            border-color: var(--btn-success-light);
        }

    body[data-theme='light'] .btn-success {
        background-color: var(--btn-success-light);
        border-color: var(--btn-success-light);
    }

        body[data-theme='light'] .btn-success:hover {
            background-color: var(--btn-success-light);
            border-color: var(--btn-success-light);
        }

    .discount-badge {
        position: absolute;
        top: 10px;
        left: 10px;
        background-color: #ff4500;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 0.9em;
        font-weight: bold;
    }

    .discount-circle {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #ff4500;
        color: white;
        padding: 5px;
        border-radius: 50%;
        font-size: 0.9em;
        font-weight: bold;
    }

    .wishlist-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        color: #ff9800;
        font-size: 1.5em;
        cursor: pointer;
    }

    .loading-spinner {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 20px 0;
        width: 100%;
    }

        .loading-spinner img {
            width: 50px;
            height: 50px;
        }

    footer {
        text-align: center;
        padding: 20px 0;
        color: var(--footer-color-dark);
    }

    body[data-theme='light'] footer {
        color: var(--footer-color-light);
    }

    .filter-container {
        margin-top: 20px;
    }

        .filter-container input {
            margin: 5px 0;
            padding: 5px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        .filter-container button {
            margin-top: 5px;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            background-color: var(--btn-primary-dark);
            color: white;
            cursor: pointer;
        }

            .filter-container button:hover {
                background-color: var(--btn-primary-light);
            }

</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        if (@Html.Raw(Json.Serialize(TempData["ShowRegisterSuccess"])) === true) {
            Swal.fire({
                title: 'Реєстрація пройшла успішно!',
                icon: 'success',
                showConfirmButton: false,
                timer: 1000
            });
        }

        if (@Html.Raw(Json.Serialize(TempData["ShowLoginSuccess"])) === true) {
            Swal.fire({
                title: 'Успішний вхід в систему!',
                icon: 'success',
                showConfirmButton: false,
                timer: 1000
            });
        }

        if (@Html.Raw(Json.Serialize(TempData["ShowLogoutSuccess"])) === true) {
            Swal.fire({
                title: 'Ви вийшли з системи!',
                icon: 'success',
                showConfirmButton: false,
                timer: 1000
            });
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        let pageNumber = @ViewBag.PageNumber;
        const pageSize = @ViewBag.PageSize;
        let isFetching = false;
        let allProductsFetched = false;

        async function fetchProducts() {
            if (isFetching || allProductsFetched) return;
            isFetching = true;
            pageNumber++;
            document.getElementById('loadingSpinner').style.display = 'flex';

            let url = `@Url.Action("AllProducts")?pageNumber=${pageNumber}&pageSize=${pageSize}`;
            const category = '@ViewBag.Category';
            const filterName = '@ViewBag.FilterName';
            const priceFrom = '@ViewBag.PriceFrom';
            const priceTo = '@ViewBag.PriceTo';

            if (category) url = `@Url.Action("FilterProducts")?pageNumber=${pageNumber}&pageSize=${pageSize}&category=${category}`;
            if (filterName) url += `&filterName=${filterName}`;
            if (priceFrom && priceTo) url += `&priceFrom=${priceFrom}&priceTo=${priceTo}`;

            try {
                const response = await fetch(url);
                const html = await response.text();
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const newProducts = doc.querySelectorAll('.col-md-4.mb-4');

                if (newProducts.length < pageSize) {
                    allProductsFetched = true;
                }

                newProducts.forEach(product => {
                    document.querySelector('.row').appendChild(product);
                });

                isFetching = false;
                document.getElementById('loadingSpinner').style.display = 'none';
            } catch (error) {
                console.error('Error fetching products:', error);
                isFetching = false;
                document.getElementById('loadingSpinner').style.display = 'none';
            }
        }

        window.addEventListener('scroll', () => {
            if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 100) {
                fetchProducts();
            }
        });

        var cards = document.querySelectorAll('.clickable-card');

        cards.forEach(function (card) {
            card.addEventListener('click', function (e) {
                if (!e.target.classList.contains('buy-button') && !e.target.classList.contains('btn-add-to-cart')) {
                    window.location.href = this.getAttribute('data-url');
                }
            });

            var purchaseButton = card.querySelector('.buy-button');
            var cartButton = card.querySelector('.btn-add-to-cart');

            if (cartButton) {
                cartButton.addEventListener('mouseenter', function () {
                    card.classList.add('no-outline');
                });

                cartButton.addEventListener('mouseleave', function () {
                    card.classList.remove('no-outline');
                });

                cartButton.addEventListener('click', function (e) {
                    e.stopPropagation();
                });
            }

            if (purchaseButton) {
                purchaseButton.addEventListener('mouseenter', function () {
                    card.classList.add('no-outline');
                });

                purchaseButton.addEventListener('mouseleave', function () {
                    card.classList.remove('no-outline');
                });

                purchaseButton.addEventListener('click', function (e) {
                    e.stopPropagation();
                    const productId = purchaseButton.getAttribute('data-product-id');
                    const productQuantity = purchaseButton.getAttribute('data-product-quantity');
                    setSelectedProductId(productId);
                    document.getElementById('quantity').setAttribute('max', productQuantity);
                    document.getElementById('quantityError').classList.add('d-none');
                    $('#quantityModal').modal('show');
                });
            }
        });

        document.getElementById('quantity').addEventListener('input', function () {
            const quantityInput = this;
            const quantity = parseInt(quantityInput.value, 10);
            const maxQuantity = parseInt(quantityInput.getAttribute('max'), 10);

            if (quantity <= 0 || quantity > maxQuantity) {
                const errorMessage = quantity <= 0 ? 'Кількість має бути більша ніж 0.' : `Кількість не має перевищувати ${maxQuantity}.`;
                document.getElementById('quantityError').textContent = errorMessage;
                document.getElementById('quantityError').classList.remove('d-none');
            } else {
                document.getElementById('quantityError').classList.add('d-none');
            }
        });

        document.getElementById('buyButton').addEventListener('click', function (e) {
            const quantityInput = document.getElementById('quantity');
            const quantity = parseInt(quantityInput.value, 10);
            const maxQuantity = parseInt(quantityInput.getAttribute('max'), 10);

            if (quantity <= 0 || quantity > maxQuantity) {
                e.preventDefault();
                const errorMessage = quantity <= 0 ? 'Кількість має бути більша ніж 0.' : `Кількість не має перевищувати ${maxQuantity}.`;
                document.getElementById('quantityError').textContent = errorMessage;
                document.getElementById('quantityError').classList.remove('d-none');
            }
        });
    });

    function filterProducts() {
        var filterForm = document.getElementById('filterForm');
        filterForm.submit();
    }

    function setSelectedProductId(productId) {
        document.getElementById('selectedProductId').value = productId;
    }
</script>

<div class="container mt-4">
    <strong style="margin-bottom:10px">Категорії</strong>
    <div class="d-flex flex-column flex-md-row">
        <div class="categories">
            <form id="filterForm" method="get" action="@Url.Action("FilterProducts", "Product")">
                <ul class="list-group">
                    <li class="list-group-item">
                        <b><a class="link-style" asp-action="AllProducts">Всі продукти</a></b>
                    </li>
                    @foreach (var category in Model.Categories)
                    {
                        <li class="list-group-item">
                            <input type="radio" name="category" value="@category.Name" @(ViewBag.Category == category.Name ? "checked" : "") /> @category.Name
                        </li>
                    }
                </ul>
                <div class="filter-container mt-4">
                    <h2>Ціна</h2>
                    <div class="input-group mb-3">
                        <input type="number" class="form-control no-spin-buttons" id="priceFrom" name="priceFrom" placeholder="Від" value="@ViewBag.PriceFrom" />
                        <span class="input-group-text">-</span>
                        <input type="number" class="form-control no-spin-buttons" id="priceTo" name="priceTo" placeholder="До" value="@ViewBag.PriceTo" />
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <select id="filterSelect" name="filterName" class="form-select me-2" style="width: 60%;">
                            <option disabled selected>Фільтрувати за</option>
                            <option value="Name">За назвою</option>
                            <option value="Price">За ціною</option>
                        </select>
                        <button type="button" class="btn btn-primary" onclick="filterProducts()">Filter</button>
                    </div>
                </div>
            </form>
        </div>

        <div class="products-flex-grow-1 w-100">
            <div class="row">
                @foreach (var product in Model.Products)
                {
                    var isInCart = cartItems?.Any(ci => ci.ProductId == product.Id) == true;
                    <div class="col-md-4 mb-4">
                        <div class="card h-100 clickable-card" data-url="@Url.Action("GoToDetailsPage", new { productId = product.Id })">
                            <div class="card-img-container">
                                <img class="card-img-top my-image" src="@product.PictureUrl" alt="Product Image">
                                @if (product.Discount.HasValue && product.Discount.Value > 0)
                                {
                                    <div class="discount-circle">-@product.Discount.Value%</div>
                                }
                            </div>
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-description">@product.Description</p>
                                <h5 class="card-title">@product.Category.Name</h5>
                                <p class="card-text quantity">В наявності: @product.Quantity</p>
                                <p class="card-text">
                                    @if (product.Discount.HasValue && product.Discount.Value > 0)
                                    {
                                        <span class="price">₴@product.DiscountedPrice?.ToString("0.00")</span>
                                        <span class="old-price">₴@product.Price?.ToString("0.00")</span>
                                    }
                                    else
                                    {
                                        <span class="price">₴@product.Price?.ToString("0.00")</span>
                                    }
                                </p>
                                <div class="comment-count">
                                    <i class="fa fa-comment" aria-hidden="true"></i> @product.Comments.Count
                                </div>
                                <div class="mt-auto d-flex justify-content-between">
                                    @if (product.UserId != User.GetUserId())
                                    {
                                        <button type="button" class="btn btn-primary btn-sm buy-button" data-toggle="modal" data-target="#quantityModal" data-product-id="@product.Id" data-product-quantity="@product.Quantity">Купити</button>
                                        <form asp-action="AddToCart" method="post">
                                            <input type="hidden" name="productId" value="@product.Id" />
                                            <button class="btn btn-success btn-sm btn-add-to-cart" @(isInCart ? "disabled" : "")>
                                                <i class="fas fa-shopping-cart"></i> Add to Cart
                                            </button>
                                        </form>
                                    }
                                    else
                                    {
                                        <a asp-route-productId="@product.Id" asp-action="GoToProductEditPage" class="btn btn-primary btn-sm">Редагувати</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="loading-spinner" id="loadingSpinner" style="display: none;">
                <img src="~/icons/loading.gif" alt="Завантаження...">
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="quantityModal" tabindex="-1" role="dialog" aria-labelledby="quantityModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="quantityModalLabel">Введіть кількість</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="quantityForm" method="post" asp-action="GoToBuyPage">
                    <input type="hidden" name="selectedItems" id="selectedProductId" value="" />
                    <div class="form-group text-center">
                        <label for="quantity">Кількість</label>
                        <input type="number" class="form-control mx-auto no-spin-buttons" id="quantity" name="quantities" min="1" required />
                        <span id="quantityError" class="text-danger d-none"></span>
                    </div>
                    <button type="submit" class="btn btn-primary" id="buyButton">Купити</button>
                </form>
            </div>
        </div>
    </div>
</div>

<footer class="container">
    <small><a class="new-link-style" asp-controller="Home" asp-action="GoToTermsAndConditionsPage">Умови та положення</a></small>
</footer>